# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables: &variables

  ###########################
  # Docker images variables #
  ###########################

  GITLAB_REGISTRY: "gitlab-registry.adorsys.de"
  GITLAB_NAMESPACE: "adorsys/xs2a/aspsp-xs2a"

  DOCKER_NAMESPACE: "adorsys"

  OPENSHIFT_REGISTRY: "openshift-registry.adorsys.de:443"
  OPENSHIFT_NAMESPACE: "multibanking-xs2a"

  # XS2A Service
  GITLAB_IMAGE_NAME_XS2A: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}"
  DOCKER_IMAGE_NAME_XS2A: "${DOCKER_NAMESPACE}/xs2a-service"
  OPENSHIFT_IMAGE_NAME_XS2A: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/aspsp-xs2a"

  # Content management service
  GITLAB_IMAGE_NAME_CNT_MGMNT: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/cnt-mgmnt"
  DOCKER_IMAGE_NAME_CNT_MGMNT: "${DOCKER_NAMESPACE}/xs2a-consent-management"
  OPENSHIFT_IMAGE_NAME_CNT_MGMNT: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/xs2a-cnt-mgmnt"

  # ASPSP Mock Server
  GITLAB_IMAGE_NAME_MOCKSRV: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/aspsp-mock-server"
  DOCKER_IMAGE_NAME_MOCKSRV: "${DOCKER_NAMESPACE}/xs2a-mock-server"
  OPENSHIFT_IMAGE_NAME_MOCKSRV: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/aspsp-mock-server"

  # XS2A IDP Keycloak
  GITLAB_IMAGE_NAME_KEYCLOAK: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/keycloak-xs2a"
  DOCKER_IMAGE_NAME_KEYCLOAK: "${DOCKER_NAMESPACE}/xs2a-idp"
  OPENSHIFT_IMAGE_NAME_KEYCLOAK: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/keycloak-xs2a"

  # XS2A IDP ASPSP Profile
  GITLAB_IMAGE_NAME_ASPSP_PROFILE: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/xs2a-aspsp-profile"
  DOCKER_IMAGE_NAME_ASPSP_PROFILE: "${DOCKER_NAMESPACE}/xs2a-aspsp-profile"
  OPENSHIFT_IMAGE_NAME_ASPSP_PROFILE: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/xs2a-aspsp-profile"

  # XS2A Integration Tests
  GITLAB_IMAGE_NAME_INTEG_TESTS: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/xs2a-integtests"
  DOCKER_IMAGE_NAME_INTEG_TESTS: "${DOCKER_NAMESPACE}/xs2a-integration-tests"
  OPENSHIFT_IMAGE_NAME_INTEG_TESTS: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/xs2a-integtests"

  # Online banking demo
  GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/online-banking-demo"
  DOCKER_IMAGE_NAME_ONLINE_BANKING_DEMO: "${DOCKER_NAMESPACE}/xs2a-mock-online-banking-backend"
  OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_DEMO: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/online-banking-demo"

  # Online banking UIapp
  GITLAB_IMAGE_NAME_ONLINE_BANKING_UI: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/online-banking-ui"
  DOCKER_IMAGE_NAME_ONLINE_BANKING_UI: "${DOCKER_NAMESPACE}/xs2a-mock-online-banking-ui"
  OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_UI: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/online-banking-ui"


  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-Xmx350M"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"


  ###########################
  # Deployment variables    #
  ###########################

  DEV_NAMESPACE: adorsys-psd2-develop
  INTEG_NAMESPACE: adorsys-psd2-integ
  DEMO_NAMESPACE: adorsys-psd2-demo
  TILLER_NAMESPACE: adorsys-psd2-tiller
  ANSIBLE_VAULT_PASSWORD_FILE: /tmp/vault_pass

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.java_artifacts: &java_artifacts
  paths:
    - "spi-mock/target/spi-mock*jar"
    - "consent-management-system/target/consent-management*jar"
    - "aspsp-profile/aspsp-profile-server/target/aspsp-profile*jar"
    - "aspsp-mock-server/target/aspsp-mock-server*jar"
    - "aspsp-idp/keycloak-provider-extension/keycloak-clientregistration-provider/target/keycloak-clientregistration-provider.jar"
    - "integration-tests/target/xs2a-integtests.jar"
    - "online-banking-demo/target/online-banking-demo*jar"
  name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"

.build_java: &build_java
  stage: "build:src"
  image: "adorsys/openjdk-build-base:8"
  script:
    - mvn -DskipTests clean install

# Build docker images and put them to GITLAB repo
# TODO remove when docker hub images work
.build_docker_image: &build_docker_image
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY

    - docker build -t "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG" spi-mock
    - docker push "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG" aspsp-mock-server
    - docker push "$GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG" aspsp-idp
    - docker push "$GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG" consent-management-system
    - docker push "$GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG" aspsp-profile/aspsp-profile-server
    - docker push "$GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG" integration-tests
    - docker push "$GITLAB_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG" online-banking-demo
    - docker push "$GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG"

# Build docker images and put them to DOCKER HUB repo
.build_dockerhub_image: &build_dockerhub_image
  script:
    - docker build -t "$DOCKER_IMAGE_NAME_XS2A:$DOCKER_TAG" spi-mock

    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS
    - echo "DOCKER_IMAGE_NAME is ${DOCKER_IMAGE_NAME_XS2A}"
    - echo "DOCKER_TAG is ${DOCKER_TAG}"
    - docker push "$DOCKER_IMAGE_NAME_XS2A:$DOCKER_TAG"

    - docker build -t "$DOCKER_IMAGE_NAME_MOCKSRV:$DOCKER_TAG" aspsp-mock-server
    - docker push "$DOCKER_IMAGE_NAME_MOCKSRV:$DOCKER_TAG"

    - docker build -t "$DOCKER_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG" aspsp-idp
    - docker push "$DOCKER_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG"

    - docker build -t "$DOCKER_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG" consent-management-system
    - docker push "$DOCKER_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG"

    - docker build -t "$DOCKER_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG" aspsp-profile/aspsp-profile-server
    - docker push "$DOCKER_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG"

    - docker build -t "$DOCKER_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG" integration-tests
    - docker push "$DOCKER_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG"

    - docker build -t "$DOCKER_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG" online-banking-demo
    - docker push "$DOCKER_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG"

    - docker logout

# Pull docker images and put them to OPENSHIFT repo
# TODO remove when docker hub images work
.push_docker_openshift: &push_docker_openshift
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY
    - docker login -u openshift -p $OPENSHIFT_TOKEN $OPENSHIFT_REGISTRY

    - docker pull $GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_XS2A:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_XS2A:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_MOCKSRV:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_MOCKSRV:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_INTEG_TESTS:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG

.helm_env_deploy: &helm_env_deploy
  image: adorsys/ci-helm:2.10
  script:
    - cd devops/charts/xs2a
    - helm init --client-only
    - oc login kubernetes.default.svc --token=${HELM_TOKEN} --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt
    - echo "${VAULT_PWD}" > $ANSIBLE_VAULT_PASSWORD_FILE
    - ansible-vault view env/develop.yaml.enc > env/develop.yaml
    - >-
      helm diff upgrade ${HELM_RELEASE} .
      --allow-unreleased -q
      -f env/${HELM_VALUE}
    - >-
      helm upgrade -i ${HELM_RELEASE} .
      --namespace=${OPENSHIFT_NAMESPACE} --wait --timeout=600
      -f env/${HELM_VALUE}
# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "build:src"    # build jar and provide as artifact
  - "build:qa"     # run tests and code quality checks
  - "build:image"  # dockerize jar and push to gitlab registry
  - "deploy"       # push to openshift registry (snapshot deployment) or release registry
  - "deploy:static"      # push to openshift registry (snapshot deployment) or release registry


# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

build_package:
  <<: *build_java
  artifacts:
    <<: *java_artifacts
    expire_in: "1 day"

pmd_report:
  stage: "build:src"
  image: "adorsys/openjdk-build-base:8"
  script:
    - mvn -Dmaven.test.skip=true package pmd:pmd
  artifacts:
    paths:
    - "qa/pmd/pmd-ruleset.xml"
    - "**/**/*/pmd.html"
    - "**/*/pmd.xml"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

check_pmd:
  stage: "build:qa"
  image: "adorsys/openjdk-build-base:8"
  script:
    - mvn -Dmaven.test.skip=true package pmd:check

check_javadoc:
  stage: "build:qa"
  image: "adorsys/openjdk-build-base:8"
  script:
    - mvn -Dmaven.test.skip=true package javadoc:javadoc
  artifacts:
    paths:
    - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

unit_tests:
  stage: "build:qa"
  image: "adorsys/openjdk-build-base:8"
  script:
    - mvn --fail-at-end clean install
  artifacts:
    paths:
    - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"


# Develop

deploy_develop_stage:
  stage: "deploy:static"
  <<: *build_docker_image
  <<: *push_docker_openshift
  <<: *helm_env_deploy
  only:
    - develop
  variables:
    <<: *variables
    OPENSHIFT_NAMESPACE: "${DEV_NAMESPACE}"
    DOCKER_TAG: "${CI_COMMIT_REF_SLUG}"
    HELM_RELEASE: "${CI_ENVIRONMENT_SLUG}-psd2"
    HELM_VALUE: develop.yaml
  environment:
    name: dev
    url: ~

deploy_dockerhub_stage:
  stage: "deploy:static"
  <<: *build_dockerhub_image
  only:
    - dgo_push_images_docker_hub
  variables:
    <<: *variables
    OPENSHIFT_NAMESPACE: "${DEV_NAMESPACE}"
    DOCKER_TAG: develop
    HELM_RELEASE: "${CI_ENVIRONMENT_SLUG}-psd2"
    HELM_VALUE: develop.yaml
  environment:
    name: dev
    url: ~

# Branches with -helm- in naming are used for testing deployment scripts
deploy_branch_stage:
  stage: "deploy:static"
  <<: *build_docker_image
  <<: *push_docker_openshift
  <<: *helm_env_deploy
  when: manual
  only:
    - /^.*-helm-.*$/
  variables:
    <<: *variables
    OPENSHIFT_NAMESPACE: "${DEV_NAMESPACE}"
    DOCKER_TAG: "${CI_COMMIT_REF_SLUG}"
    HELM_RELEASE: "${CI_ENVIRONMENT_SLUG}-psd2"
    HELM_VALUE: develop.yaml
  environment:
    name: dev
    url: ~

build_image_integ:
  stage: "build:image"
  only:
    - develop
  variables:
    DOCKER_TAG: integ
  environment:
    name: integ
    url: https://xs2a.integ.cloud.adorsys.de
  <<: *build_docker_image

deploy_image_integ:
  stage: deploy
  only:
    - develop
  environment:
    name: integ
    url: https://xs2a.integ.cloud.adorsys.de
  variables:
    DOCKER_TAG: integ
  <<: *push_docker_openshift

# Master

build_image_master:
  stage: "build:image"
  only:
    - master
  variables:
    DOCKER_TAG: latest
  environment:
    name: demo
    url: https://xs2a.cloud.adorsys.de
  <<: *build_docker_image

deploy_image_master:
  stage: deploy
  only:
    - master
  variables:
    DOCKER_TAG: latest
  environment:
    name: demo
    url: https://xs2a.cloud.adorsys.de
  <<: *push_docker_openshift

# Release

build_image_release:
  stage: "build:image"
  only:
    - tags
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *build_docker_image

deploy_image_release:
  stage: deploy
  only:
    - tags
  when: manual
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *push_docker_openshift

# Integ tests

build_image_integtest:
  stage: "build:image"
  only:
    - schedules
  variables:
    DOCKER_TAG: nightly
  <<: *build_docker_image

deploy_image_integtest:
  stage: deploy
  only:
    - schedules
  variables:
    DOCKER_TAG: nightly
  <<: *push_docker_openshift
